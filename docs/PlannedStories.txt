Features/Stories planned
========================

model: client
model: event


plugins using dagger
	https://tech.just-eat.com/2015/10/26/dependency-injection-on-android/

clientprovider interface, LocalDatabaseBackendClientProvider
Factory returns a clientprovider. Use dependency injection at compile time (so compile a 'local backed' one for example)

view: create a client
    Preferred name
    photo
    https://www.journaldev.com/13270/android-capture-image-camera-gallery
    interests
        (i) No facility for legal name/address/age etc is provided here. The application is to report back events, not store personal data. GDPR!




model: default events from a properties file? Probably json to enable depth


view: see clients diary for today
    scrolling list
        show hour only
        icon per event in correct order (up to 3, with a ... icon third if more than 3)

view: create an event in todays diary
    time
    type of event
        presupplied list, story to create more later
    did the event go ok? y/n/don't know
    name of event (default from type)
    time taken (default from type)

view: select a client from a list
    photo
    prefname

view: edit a clients details


connectivity: post events to a facebook page

event should contain a freetext note (defaults from event type) and List<Photo> to upload to feed

work out algorithm for checking backwards if necessary for recurring events. Possibly:
    always add this one and the next one
    each time an event is populated into the view add the next one (or check it's there) async
    if no events for today get the last event, check its recurrence, then go back one of that interval and check for others in between
